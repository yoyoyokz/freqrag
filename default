# HTTP to HTTPS redirect (Port 80)
server {
    listen 80;
    listen [::]:80;

    server_name yourdomain.com www.yourdomain.com;  # Replace yourdomain  or public IP

    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS Server Block (Port 443) - SSL Termination & Reverse Proxy
server {
    listen 443 ssl;
    listen [::]:443 ssl ipv6only=on;

    server_name yourdomain.com www.yourdomain.com;  # Replace with your yourdomain or public IP

    # SSL Certificate and Key (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;


    # Reverse Proxy for /poe-chat/ to your FastAPI app (running on port 8000)
    location /poe-chat/ {
        proxy_pass http://127.0.0.1:8000/poe-chat/;  # Forward to your FastAPI app running on port 8000
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Optional: Ensure proper request handling for upgrades (WebSocket support, etc.)
        proxy_cache_bypass $http_upgrade;
    }

    # Optional: Serve static files if necessary (adjust the path accordingly)
    # root /var/www/youryourdomain.com;
}

# HTTP Redirect for specific yourdomain (force HTTPS)
server {
    if ($host = yourdomain.com) {
        return 301 https://$host$request_uri;
    }

    listen 80;
    listen [::]:80;
    server_name yourdomain.com;  # Replace with your yourdomain
    return 404;  # If no match, return 404
}

